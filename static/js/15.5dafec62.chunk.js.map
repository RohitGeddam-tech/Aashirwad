{"version":3,"sources":["Utils/FormMob.js"],"names":["useStyles","makeStyles","theme","container","display","flexFlow","backgroundColor","width","margin","alignItems","borderRadius","textField","marginTop","spacing","marginBottom","outline","p","color","formControl","selectEmpty","alignbtn","bold","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","textAlign","textTransform","padding","text","head","tel","marginLeft","whiteSpace","title","para","icon","justifyContent","iconimg","cursor","modal","height","position","zIndex","date","Form","useState","name","setName","phoneNo","setPhoneNo","emailID","setEmailID","sel","setSel","Date","setDate","nameInvalid","setNameInvalid","phoneNoInvalid","setPhoneNoInvalid","emailIDInvalid","setEmailIDInvalid","selInvalid","setSelInvalid","setValidity","form","setForm","formEmpty","setFormEmpty","classes","handleChange","e","target","value","validity","valid","charAt","toUpperCase","slice","className","onSubmit","preventDefault","Object","values","every","each","console","log","noValidate","autoComplete","id","label","variant","onChange","inputProps","pattern","type","required","labelId","map","option","utils","DateFnsUtils","disablePast","inputVariant","minDate","format","href"],"mappings":"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","file":"static/js/15.5dafec62.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n// import DateTimePicker from \"react-datetime-picker\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexFlow: \"column\",\n    backgroundColor: \"white\",\n    width: \"100%\",\n    margin: \"auto\",\n    alignItems: \"center\",\n    borderRadius: \"3px\",\n  },\n  textField: {\n    margin: \"auto\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    width: \"80%\",\n    outline: \"none\",\n  },\n  p: {\n    color: \"red\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"80%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  alignbtn: {\n    marginTop: theme.spacing(1),\n  },\n  bold: {\n    fontFamily: \"Montserrat\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"18px\",\n    lineHeight: \" 134.77%\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    color: \"#979797\",\n    margin: \"0\",\n    padding: \"15px 0\",\n  },\n  text: {\n    display: \"flex\",\n  },\n  head: {\n    fontFamily: \"Montserrat\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"20px\",\n    lineHeight: \" 134.77%\",\n    textAlign: \"center\",\n    color: \"#092f57\",\n  },\n  tel: {\n    fontFamily: \"Montserrat\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"20px\",\n    lineHeight: \" 134.77%\",\n    textAlign: \"center\",\n    marginLeft: \"5px\",\n    whiteSpace: \"nowrap\",\n  },\n  title: {\n    fontFamily: \"Montserrat\",\n    fontStyle: \"normal\",\n    fontWeight: \"900\",\n    fontSize: \"24px\",\n    lineHeight: \"33px\",\n    textAlign: \"center\",\n    color: \"#092f57\",\n    margin: \"0\",\n    whiteSpace: \"nowrap\",\n  },\n  para: {\n    fontFamily: \"Montserrat\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"16px\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    color: \"#989cac\",\n  },\n  icon: {\n    width: \"97%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"10px 0\",\n  },\n  iconimg: {\n    cursor: \"pointer\",\n  },\n  modal: {\n    width: \"100%\",\n    height: \"fit-content\",\n    display: \"flex\",\n    position: \"relative\",\n    zIndex: \"9999\",\n    margin: \"auto\",\n  },\n  date: {\n    margin: \"auto\",\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    width: \"80%\",\n    outline: \"none\",\n  },\n}));\n\nconst Form = () => {\n  // const dateTime = moment().format().replace('+05:30', '')\n\n  const [name, setName] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [emailID, setEmailID] = useState(\"\");\n  const [sel, setSel] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  // const [recdate, setRecDate] = useState(false);\n  const [nameInvalid, setNameInvalid] = useState(false);\n  const [phoneNoInvalid, setPhoneNoInvalid] = useState(false);\n  const [emailIDInvalid, setEmailIDInvalid] = useState(false);\n  const [selInvalid, setSelInvalid] = useState(false);\n  // const [dateInvalid, setDateInvalid] = useState(false);\n  const [validity, setValidity] = useState(false);\n  const [form, setForm] = useState({});\n  const [formEmpty, setFormEmpty] = useState(false);\n\n  const classes = useStyles();\n\n  const selectedOpts = [\n    {\n      value: \"blue\",\n      label: \"test and packages\",\n    },\n    {\n      value: \"green\",\n      label: \"green\",\n    },\n    {\n      value: \"violet\",\n      label: \"violet\",\n    },\n    {\n      value: \"red\",\n      label: \"red\",\n    },\n  ];\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        setNameInvalid(!e.target.validity.valid);\n        break;\n      case \"phoneNo\":\n        setPhoneNo(e.target.value);\n        setPhoneNoInvalid(!e.target.validity.valid);\n        break;\n      case \"emailID\":\n        setEmailID(e.target.value);\n        setEmailIDInvalid(!e.target.validity.valid);\n        break;\n      case \"sel\":\n        setSel(e.target.value);\n        setSelInvalid(!e.target.value);\n        break;\n      default:\n        break;\n    }\n    setForm({\n      name: name.charAt(0).toUpperCase() + name.slice(1),\n      phoneNo: phoneNo,\n      emailID: emailID,\n      sel: sel,\n      date: date,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (Object.values(form).every((each) => each === \"\")) {\n      setFormEmpty(true);\n      setValidity(false);\n    } else {\n      setFormEmpty(false);\n    }\n\n    if (\n      !(\n        nameInvalid ||\n        phoneNoInvalid ||\n        emailIDInvalid ||\n        selInvalid \n      )\n    ) {\n      setValidity(true);\n      setForm({\n        name: name.charAt(0).toUpperCase() + name.slice(1),\n        phoneNo: phoneNo,\n        emailID: emailID,\n        sel: sel,\n        date: date,\n      });\n    } else {\n      setValidity(false);\n    }\n\n    console.log(form);\n  };\n\n  return (\n    <>\n      <form\n        className={classes.container}\n        onSubmit={handleSubmit}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <h2 className={classes.title}>BOOK AN APPOINTMENT</h2>\n        <p className={classes.para}>by filling in your details </p>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          className={classes.textField}\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          inputProps={{ pattern: \"^([A-Za-z ,.'`-]{2,30})$\" }}\n          type=\"text\"\n          required\n        />\n        {nameInvalid ? (\n          <p className={classes.p}>Please provide a valid name</p>\n        ) : (\n          \"\"\n        )}\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          name=\"emailID\"\n          className={classes.textField}\n          value={emailID}\n          onChange={handleChange}\n          inputProps={{\n            pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$\",\n          }}\n          type=\"email\"\n          required\n        />\n        {emailIDInvalid ? (\n          <p className={classes.p}>Please provide a valid email</p>\n        ) : (\n          \"\"\n        )}\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Phone No.\"\n          variant=\"outlined\"\n          className={classes.textField}\n          name=\"phoneNo\"\n          value={phoneNo}\n          onChange={handleChange}\n          inputProps={{\n            pattern: \"^[0-9]{10}$\",\n          }}\n          type=\"tel\"\n          required\n        />\n        {phoneNoInvalid ? (\n          <p className={classes.p}>Please provide a valid mobile number</p>\n        ) : (\n          \"\"\n        )}\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Select a Test/Package\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={sel}\n            onChange={handleChange}\n            label=\"Select a Test/Package\"\n            name=\"sel\"\n          >\n            {selectedOpts.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        {selInvalid ? (\n          <p className={classes.p}>Please provide a selected package</p>\n        ) : (\n          \"\"\n        )}\n        {/* <TextField\n          id=\"datetime-local\"\n          type=\"datetime-local\"\n          label=\"Select Date & Time\"\n          className={classes.textField}\n          value={date}\n          name=\"date\"\n          onChange={handleChange}\n          onClick={()=>{setRecDate(true)}}\n          InputLabelProps={\n            recdate ? {shrink: true} : {shrink: false}\n          }\n          variant=\"outlined\"\n        /> */}\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DateTimePicker\n            disablePast={true}\n            label={`Select Date & Time`}\n            inputVariant=\"outlined\"\n            className={classes.textField}\n            minDate={date}\n            format=\"E, dd MMM h:mm a\"\n            // onClick={()=>{setRecDate(true)}}\n            value={date}\n            onChange={setDate}\n            // disablePast\n          />\n        </MuiPickersUtilsProvider>\n        {/* <DateTimePicker\n          name=\"date\"\n          className={classes.date}\n          value={date}\n          onChange={setDate}\n        /> */}\n        {/* {dateInvalid ? (\n          <p className={classes.p}>Please provide the appointment date</p>\n        ) : (\n          \"\"\n        )} */}\n        <div className={classes.alignbtn}>\n          <button type=\"submit\" className=\"button\">\n            Submit\n          </button>\n        </div>\n        {formEmpty ? <p className={classes.p}>Please fill in the form</p> : \"\"}\n        <h1 className={classes.bold}>OR</h1>\n        <div className={classes.text}>\n          <h4 className={classes.head}>Call us on:</h4>\n          <a href=\"tel:+91 98765 09876\" className={classes.tel}>\n            +91 98765 09876\n          </a>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n"],"sourceRoot":""}